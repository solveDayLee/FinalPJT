<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.soda.model.dao.BoardDao">
	<select id="selectAll" resultType="Board">
		SELECT b.*,
		IFNULL(count(l.board_no),0)
		as likesCnt
		FROM board b
		LEFT JOIN likes l ON
		b.board_no = l.board_no
		GROUP BY
		b.board_no
		ORDER BY
		b.board_no DESC
	</select>

	<select id="selectByNo" resultType="Board" parameterType="int">
		SELECT
		b.*,
		u.user_no as "user.userNo",
		u.user_id as "user.userId",
		count(l.board_no) as "likesCnt"
		FROM board b
		LEFT JOIN user u ON
		b.user_no = u.user_no
		LEFT JOIN likes l ON b.board_no = l.board_no
		WHERE b.board_no = #{no}
	</select>

	<update id="updateBoard" parameterType="Board">
		UPDATE board SET
		title = #{title},
		writer = #{writer},
		content = #{content},
		category = #{category},
		detail_category = #{detailCategory}
		WHERE board_no =
		#{boardNo}

	</update>
	<update id="updateViewCnt" parameterType="int">
		UPDATE board
		SET view_cnt = view_cnt + 1
		WHERE board_no = #{no}
	</update>



	<select id="selectBoardSearched" resultType="Board"
		parameterType="SearchCondition">
		SELECT *
		FROM board
		<where>
			<if test="category == 'title'">
				title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="category == 'content'">
				content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="category == 'board_no'">
				board_no LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>
	<delete id="delete" parameterType="int">
		DELETE from board
		WHERE
		board_no = #{no}
	</delete>

	<insert id="insertBoard" parameterType="Board">
		insert into board (title,
		writer, content, category, detail_category, user_no)
		values (#{title},
		#{writer}, #{content}, #{category}, #{detailCategory}, #{userNo});
	</insert>

	<select id="allLikesCount" resultType="int">
		SELECT
		COALESCE(COUNT(l.board_no), 0) as like_count
		FROM board b
		LEFT JOIN
		likes l ON b.board_no = l.board_no
		GROUP BY b.board_no
		ORDER BY
		b.board_no DESC;
	</select>
	<select id="likesCount" resultType="int" parameterType="int">
		SELECT
		COUNT(l.board_no)
		FROM board b
		LEFT JOIN likes l ON b.board_no =
		l.board_no
		WHERE b.board_no = #{no}
		GROUP BY b.board_no;
	</select>

	<!-- 신고처리 -->
	<select id="sellectAllReported" resultType="Board">
		SELECT
		b.*,
		(SELECT
		COUNT(*) FROM likes l WHERE l.board_no = b.board_no) as likesCnt,
		r.report_status as "boardReport.reportStatus"
		FROM board b
		RIGHT JOIN (
		SELECT board_no, report_status
		FROM board_report
		GROUP BY board_no,
		report_status
		ORDER BY board_no DESC
		) r ON b.board_no = r.board_no
		ORDER BY b.board_no DESC
	</select>

	<select id="allResportStatus" resultType="char">
		SELECT report_status
		FROM board_report r
		LEFT JOIN board b ON b.board_no = r.board_no
		ORDER
		BY
		b.board_no DESC;
	</select>
	<select id="sellectReportedByNo" resultType="Board"
		parameterType="int">
		SELECT
		b.*,
		u.user_id as "user.userId",
		u.user_no as
		"user.userNo",
		r.report_status as "boardReport.reportStatus",
		r.report_reason as "boardReport.reportReason",
		r.report_date as
		"boardReport.reportDate",
		(SELECT COUNT(*) FROM likes l WHERE
		l.board_no = b.board_no) as likesCnt
		FROM board b
		LEFT JOIN user u ON
		b.user_no = u.user_no
		LEFT JOIN board_report r ON b.board_no =
		r.board_no
		WHERE b.board_no = #{boardNo}
	</select>

	<select id="selectByCategory" parameterType="Board"
		resultType="Board">
		SELECT b.*, count(l.board_no) as likesCnt
		FROM board b
		LEFT JOIN likes l
		ON b.board_no = l.board_no
		<where>
			<if test="detailCategory == null">
				b.category = #{category}
			</if>
			<if test="detailCategory != null">
				b.category = #{category} AND b.detail_category =
				#{detailCategory}
			</if>
		</where>
		GROUP BY b.board_no
		ORDER BY b.board_no DESC
	</select>
</mapper>